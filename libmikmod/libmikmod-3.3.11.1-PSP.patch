diff --color -Naur libmikmod-3.3.11.1/config.h.in libmikmod-3.3.11.1-psp/config.h.in
--- libmikmod-3.3.11.1/config.h.in      2017-04-07 16:56:00.000000000 +0200
+++ libmikmod-3.3.11.1-psp/config.h.in  2020-05-07 19:46:01.998887300 +0200
@@ -61,6 +61,9 @@
 /* Define if your system supports binary pipes (i.e. Unix) */
 #undef DRV_PIPE
 
+/* Define if the PSP driver is compiled */
+#undef DRV_PSP
+
 /* Define if the PulseAudio driver is compiled */
 #undef DRV_PULSEAUDIO
 
diff --color -Naur libmikmod-3.3.11.1/autotools/config.sub libmikmod-3.3.11.1-psp/autotools/config.sub
--- libmikmod-3.3.11.1/autotools/config.sub	2017-01-01 15:11:00.000000000 +0100
+++ libmikmod-3.3.11.1-psp/autotools/config.sub	2020-05-07 18:27:03.832031770 +0200
@@ -1051,6 +1051,10 @@
 	ps2)
 		basic_machine=i386-ibm
 		;;
+	psp)
+		basic_machine=mipsallegrexel-psp
+		os=-elf
+		;;
 	pw32)
 		basic_machine=i586-unknown
 		os=-pw32
diff --color -Naur libmikmod-3.3.11.1/configure libmikmod-3.3.11.1-psp/configure
--- libmikmod-3.3.11.1/configure	2017-04-07 16:56:00.000000000 +0200
+++ libmikmod-3.3.11.1-psp/configure	2020-05-07 18:47:10.501819815 +0200
@@ -654,6 +642,7 @@
 REENTRANT
 BUILD_DOCS_FALSE
 BUILD_DOCS_TRUE
+psp_config
 SDL_CONFIG
 SDL2_CONFIG
 SDL_LIBS
@@ -812,6 +801,7 @@
 enable_mac
 enable_win
 enable_ds
+enable_psp
 enable_xaudio2
 enable_xaudio28
 enable_os2
@@ -1514,6 +1504,7 @@
   --enable-mac            Darwin only: include MAC carbon driver [default=no]
   --enable-win            Windows only: include Windows MCI driver [guessed]
   --enable-ds             Windows only: include Direct Sound driver [guessed]
+  --enable-psp            PSP only: include PSP driver [guessed]
   --enable-xaudio2        Windows only: include XAudio2 driver [default=no]
   --enable-xaudio28       Windows only: use XAudio2.8 for Windows8 instead of
                           XAudio2.7 [default=no]
@@ -3148,6 +3111,7 @@
 libmikmod_driver_mac=no
 libmikmod_driver_win=yes
 libmikmod_driver_ds=yes
+libmikmod_driver_psp=yes
 libmikmod_driver_xaudio2=no
 libmikmod_driver_ultra=no
 libmikmod_driver_os2=$libmikmod_os2
@@ -3547,6 +3485,16 @@
 fi
 
 
+# Check whether --enable-psp was given.
+if test "${enable_psp+set}" = set; then :
+  enableval=$enable_psp; if test "$enableval" = "yes"
+then
+  libmikmod_driver_psp=yes
+else
+  libmikmod_driver_psp=no
+fi
+fi
+
 # Check whether --enable-xaudio2 was given.
 if test "${enable_xaudio2+set}" = set
 then :
@@ -16426,6 +16082,79 @@
 	fi
 fi
 
+# Check for valid PSPSDK installation
+CheckPSPSDK()
+{
+ # Extract the first word of "psp-config", so it can be a program name with args.
+set dummy psp-config; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_psp_config+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$psp_config"; then
+  ac_cv_prog_psp_config="$psp_config" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_psp_config="psp-config"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_prog_psp_config" && ac_cv_prog_psp_config="no"
+fi
+fi
+psp_config=$ac_cv_prog_psp_config
+if test -n "$psp_config"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $psp_config" >&5
+$as_echo "$psp_config" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+ if test x%psp_config = xno; then
+   as_fn_error $? "Couldn't locate psp-config." "$LINENO" 5
+ fi
+
+ { $as_echo "$as_me:${as_lineno-$LINENO}: checking for PSPSDK" >&5
+$as_echo_n "checking for PSPSDK... " >&6; }
+ pspsdk_path=`$psp_config --pspsdk-path`
+ if test ! -d $pspsdk_path -o -z $pspsdk_path; then
+   { $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
+$as_echo "not found" >&6; }
+   as_fn_error $? "Couldn't locate PSPSDK." "$LINENO" 5
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $pspsdk_path" >&5
+$as_echo "$pspsdk_path" >&6; }
+
+ # Compile libmikmod with -G0 to disable the $gp register.
+ CFLAGS="$CFLAGS -G0 -I\"${pspsdk_path}/include\""
+}
+
+case "$host" in
+*-psp-*)
+ if test $libmikmod_driver_psp = yes
+ then
+   CheckPSPSDK
+   libmikmod_driverlist="psp $libmikmod_driverlist"
+
+$as_echo "#define DRV_PSP 1" >>confdefs.h
+
+ fi
+ ;;
+esac
+
 # ================
 # Choose settings.
 # ================
@@ -17082,6 +16800,11 @@
 	libmikmod_cv_gcc_visibility=no
 	;;
 esac
+case "$host" in
+*-psp-*)
+  libmikmod_cv_gcc_visibility=no
+  ;;
+esac
 CFLAGS="$ac_save_CFLAGS"
 if test $libmikmod_cv_gcc_visibility = yes
 then
diff --color -Naur libmikmod-3.3.11.1/configure.ac libmikmod-3.3.11.1-psp/configure.ac
--- libmikmod-3.3.11.1/configure.ac	2017-04-07 16:55:00.000000000 +0200
+++ libmikmod-3.3.11.1-psp/configure.ac	2020-05-07 18:36:33.035718694 +0200
@@ -111,6 +111,7 @@
 libmikmod_driver_mac=no
 libmikmod_driver_win=yes
 libmikmod_driver_ds=yes
+libmikmod_driver_psp=yes
 libmikmod_driver_xaudio2=no
 libmikmod_driver_ultra=no
 libmikmod_driver_os2=$libmikmod_os2
@@ -406,6 +407,14 @@
   libmikmod_driver_ds=no
 fi])
 
+AC_ARG_ENABLE(psp, [AS_HELP_STRING([--enable-psp],[PSP only: include PSP driver [guessed]])],
+[if test "$enableval" = "yes"
+then
+  libmikmod_driver_psp=yes
+else
+  libmikmod_driver_psp=no
+fi])
+
 AC_ARG_ENABLE([xaudio2], [AS_HELP_STRING([--enable-xaudio2],[Windows only: include XAudio2 driver [default=no]])],
 [if test "$enableval" = "yes"
 then
@@ -928,6 +937,37 @@
 	fi
 fi
 
+# Check for valid PSPSDK installation
+CheckPSPSDK()
+{
+ AC_CHECK_PROG(psp_config, psp-config, psp-config, no)
+ if test x%psp_config = xno; then
+   AC_MSG_ERROR(Couldn't locate psp-config.)
+ fi
+
+ AC_MSG_CHECKING(for PSPSDK)
+ pspsdk_path=`$psp_config --pspsdk-path`
+ if test ! -d $pspsdk_path -o -z $pspsdk_path; then
+   AC_MSG_RESULT(not found)
+   AC_MSG_ERROR(Couldn't locate PSPSDK.)
+ fi
+ AC_MSG_RESULT($pspsdk_path)
+
+ # Compile libmikmod with -G0 to disable the $gp register.
+ CFLAGS="$CFLAGS -G0 -I\"${pspsdk_path}/include\""
+}
+
+case "$host" in
+*-psp-*)
+ if test $libmikmod_driver_psp = yes
+ then
+   CheckPSPSDK
+   libmikmod_driverlist="psp $libmikmod_driverlist"
+ AC_DEFINE([DRV_PSP], 1, [Define if the PSP driver is compiled])
+ fi
+ ;;
+esac
+
 # ================
 # Choose settings.
 # ================
