diff -burN SDL_gfx-2.0.23/autogen.sh SDL_gfx/autogen.sh
--- SDL_gfx-2.0.23/autogen.sh	2011-12-04 04:28:17.000000000 +0100
+++ SDL_gfx/autogen.sh	2012-01-15 17:59:20.845522122 +0100
@@ -1,19 +1,7 @@
 #!/bin/sh
 #
 
-# Hack for MacPorts
-cp /usr/local/share/aclocal/sdl.m4 m4
-
-# Prep
-make distclean
-aclocal --force -I /usr/local/share/aclocal
-libtoolize --force --copy
-autoreconf -fvi
-rm -rf autom4te.cache
-
-# Setup
-aclocal -I /usr/local/share/aclocal
-autoheader
+aclocal
 automake --foreign
 autoconf
 
diff -burN SDL_gfx-2.0.23/config.sub SDL_gfx/config.sub
--- SDL_gfx-2.0.23/config.sub	2011-12-04 04:29:24.000000000 +0100
+++ SDL_gfx/config.sub	2012-01-15 17:59:20.846522110 +0100
@@ -944,6 +944,10 @@
 	ps2)
 		basic_machine=i386-ibm
 		;;
+	psp)
+		basic_machine=mipsallegrexel-psp
+		os=-elf
+		;;
 	pw32)
 		basic_machine=i586-unknown
 		os=-pw32
diff -burN SDL_gfx-2.0.23/configure.in SDL_gfx/configure.in
--- SDL_gfx-2.0.23/configure.in	2010-09-21 07:41:14.000000000 +0200
+++ SDL_gfx/configure.in	2012-01-15 17:59:20.846522110 +0100
@@ -63,8 +63,32 @@
 dnl Set for C compiler by default
 AC_LANG_C
 
+dnl Check for a valid PSPSDK installation
+CheckPSPSDK()
+{
+    AC_CHECK_PROG(psp_config, psp-config, psp-config, no)
+    if test x$psp_config = xno; then
+        AC_MSG_ERROR(Couldn't locate psp-config.)
+    fi
+
+    AC_MSG_CHECKING(for PSPSDK)
+    pspsdk_path=`$psp_config --pspsdk-path`
+    if test ! -d $pspsdk_path -o -z $pspsdk_path; then
+        AC_MSG_RESULT(not found)
+        AC_MSG_ERROR(Couldn't locate PSPSDK.)
+    fi
+    AC_MSG_RESULT($pspsdk_path)
+   
+    # Compile SDL with -G0 to disable the $gp register.
+    CFLAGS="$CFLAGS -G0 -I\"${pspsdk_path}/include\""
+}
+
 dnl Setup target flagsw
 case "$target" in
+    *-psp-*)
+        ARCH=psp
+        CheckPSPSDK
+        ;;
     *-*-cygwin* | *-*-mingw32*)
 	CFLAGS="$CFLAGS -DWIN32"
         if test "$build" != "$target"; then # cross-compiling
diff -burN SDL_gfx-2.0.23/README.PSP SDL_gfx/README.PSP
--- SDL_gfx-2.0.23/README.PSP	1970-01-01 01:00:00.000000000 +0100
+++ SDL_gfx/README.PSP	2012-01-15 17:59:20.858521971 +0100
@@ -0,0 +1,12 @@
+To configure:
+
+   ./autogen.sh
+   AR=psp-ar \
+     LDFLAGS="-L$(psp-config --pspsdk-path)/lib" LIBS="-lc -lpspuser" \
+     ./configure --host psp --with-sdl-prefix=$(psp-config --psp-prefix) \
+     --prefix=$(psp-config --psp-prefix) --disable-mmx --disable-shared
+
+Then run:
+
+   make
+   make install
diff -burN SDL_gfx-2.0.23/Test/autogen.sh SDL_gfx/Test/autogen.sh
--- SDL_gfx-2.0.23/Test/autogen.sh	2011-12-04 04:28:17.000000000 +0100
+++ SDL_gfx/Test/autogen.sh	2012-01-15 17:59:20.860521948 +0100
@@ -1,19 +1,7 @@
 #!/bin/sh
 #
 
-# Hack for MacPorts
-cp /usr/local/share/aclocal/sdl.m4 m4
-
-# Prep
-make distclean
-aclocal --force -I /usr/local/share/aclocal
-libtoolize --force --copy
-autoreconf -fvi
-rm -rf autom4te.cache
-
-# Setup
-aclocal -I /usr/local/share/aclocal
-autoheader
+aclocal
 automake --foreign
 autoconf
 
diff -burN SDL_gfx-2.0.23/Test/config.sub SDL_gfx/Test/config.sub
--- SDL_gfx-2.0.23/Test/config.sub	2011-12-04 04:29:24.000000000 +0100
+++ SDL_gfx/Test/config.sub	2012-01-15 17:59:20.865521888 +0100
@@ -944,6 +944,10 @@
 	ps2)
 		basic_machine=i386-ibm
 		;;
+	psp)
+		basic_machine=mipsallegrexel-psp
+		os=-elf
+		;;
 	pw32)
 		basic_machine=i586-unknown
 		os=-pw32
diff -burN SDL_gfx-2.0.23/Test/configure.in SDL_gfx/Test/configure.in
--- SDL_gfx-2.0.23/Test/configure.in	2010-01-26 06:55:07.000000000 +0100
+++ SDL_gfx/Test/configure.in	2012-01-15 17:59:20.865521888 +0100
@@ -26,8 +26,32 @@
 dnl Set for C compiler by default
 AC_LANG_C
 
+dnl Check for a valid PSPSDK installation
+CheckPSPSDK()
+{   
+    AC_CHECK_PROG(psp_config, psp-config, psp-config, no)
+    if test x$psp_config = xno; then
+        AC_MSG_ERROR(Couldn't locate psp-config.)
+    fi
+
+    AC_MSG_CHECKING(for PSPSDK)
+    pspsdk_path=`$psp_config --pspsdk-path`
+    if test ! -d $pspsdk_path -o -z $pspsdk_path; then
+        AC_MSG_RESULT(not found)
+        AC_MSG_ERROR(Couldn't locate PSPSDK.)
+    fi
+    AC_MSG_RESULT($pspsdk_path)
+
+    # Compile SDL with -G0 to disable the $gp register.
+    CFLAGS="$CFLAGS -G0 -I\"${pspsdk_path}/include\""
+}
+
 dnl Setup target flagsw
 case "$target" in
+    *-psp-*)
+        ARCH=psp
+        CheckPSPSDK
+        ;;
     *-*-cygwin* | *-*-mingw32*)
 	CFLAGS="$CFLAGS -DWIN32"
         if test "$build" != "$target"; then # cross-compiling
diff -burN SDL_gfx-2.0.23/Test/TestFonts.c SDL_gfx/Test/TestFonts.c
--- SDL_gfx-2.0.23/Test/TestFonts.c	2011-12-04 08:00:09.000000000 +0100
+++ SDL_gfx/Test/TestFonts.c	2012-01-15 17:59:20.865521888 +0100
@@ -21,8 +21,13 @@
 #include "SDL/SDL_gfxPrimitives.h"
 #endif
 
-#define WIDTH	1024
-#define HEIGHT	768
+#ifdef PSP
+# define WIDTH 480
+# define HEIGHT 272
+#else
+# define WIDTH	1024
+# define HEIGHT	768
+#endif
 
 void WaitForEvent()
 {
@@ -137,7 +142,11 @@
 	if (myfont) {
 		if (strcmp(fontfile[i],"default")) {
 			/* Load a font data */
+#ifdef PSP
+            sprintf(filename,"%s",fontfile[i]);
+#else
 			sprintf(filename,"../Fonts/%s",fontfile[i]);
+#endif
 			if (!FileExists(filename))
 			{
 				sprintf(filename,"..\\Fonts\\%s",fontfile[i]);
@@ -341,7 +350,9 @@
 	}
 
 	/* Force double buffering */
+#ifndef PSP
 	videoflags |= SDL_DOUBLEBUF;
+#endif
 
 	/* Set video mode */
 	if ( (screen=SDL_SetVideoMode(WIDTH, HEIGHT, video_bpp, videoflags)) == NULL ) {
diff -burN SDL_gfx-2.0.23/Test/TestGfxPrimitives.c SDL_gfx/Test/TestGfxPrimitives.c
--- SDL_gfx-2.0.23/Test/TestGfxPrimitives.c	2011-12-04 08:00:09.000000000 +0100
+++ SDL_gfx/Test/TestGfxPrimitives.c	2012-01-15 17:59:20.865521888 +0100
@@ -21,8 +21,13 @@
 #include "SDL/SDL_gfxPrimitives.h"
 #endif
 
+#ifndef PSP
 #define WIDTH	640
 #define HEIGHT	480
+#else
+#define WIDTH	480
+#define HEIGHT	272
+#endif
 
 #define NUM_RANDOM	512
 
@@ -2758,12 +2763,27 @@
 	sprintf (title,"TestGfxPrimitives - v%i.%i.%i",SDL_GFXPRIMITIVES_MAJOR, SDL_GFXPRIMITIVES_MINOR, SDL_GFXPRIMITIVES_MICRO);
 
 	/* Initialize SDL */
+#ifndef PSP
 	if ( SDL_Init(SDL_INIT_VIDEO) < 0 ) {
+#else
+	if ( SDL_Init(SDL_INIT_VIDEO | SDL_INIT_JOYSTICK) < 0 ) {
+#endif
 		fprintf(stderr, "Couldn't initialize SDL: %s\n",SDL_GetError());
 		exit(1);
 	}
 	atexit(SDL_Quit);
 
+#ifdef PSP
+    
+    if (!SDL_JoystickOpen(0))
+    {   
+        fprintf(stderr,
+                      "\nWarning: Could not open joystick 1.\n"
+                      "The Simple DirectMedia error that occured was:\n"
+                      "%s\n\n", SDL_GetError());
+    }
+#endif
+
 	/* Alpha blending doesn't work well at 8-bit color */
 	info = SDL_GetVideoInfo();
 	if ( info->vfmt->BitsPerPixel > 8 ) {
diff -burN SDL_gfx-2.0.23/Test/TestRotozoom.c SDL_gfx/Test/TestRotozoom.c
--- SDL_gfx-2.0.23/Test/TestRotozoom.c	2011-12-04 08:00:09.000000000 +0100
+++ SDL_gfx/Test/TestRotozoom.c	2012-01-15 17:59:20.865521888 +0100
@@ -983,10 +983,17 @@
 	messageText = (char *)malloc(128);
 
 	/* Set default options and check command-line */
+#ifndef PSP
 	w = 640;
 	h = 480;
 	desired_bpp = 0;
 	video_flags = 0;
+#else
+	w = 480;
+	h = 272;
+	desired_bpp = 32;
+	video_flags = SDL_SWSURFACE;
+#endif
 	start = 1;
 	end = 9999;
 	delay = 0;
@@ -1105,7 +1112,9 @@
 	}
 
 	/* Force double buffering */
+#ifndef PSP
 	video_flags |= SDL_DOUBLEBUF;
+#endif
 
 	/* Initialize SDL */
 	if ( SDL_Init(SDL_INIT_VIDEO) < 0 ) {
